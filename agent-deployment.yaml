apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    com.datadoghq.ad.logs: '[{"source": "agent", "service":"agent"}]'
    kompose.cmd: kompose convert
    kompose.version: 1.17.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: agent
  name: agent
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: agent
    spec:
      containers:
      - env:
        - name: DD_API_KEY
          value: 73320a11a32a33deab5858a6a46440e0
        - name: DD_APM_ANALYZED_SPANS
          value: mike-express|express.request=1,mike-express-mongodb|mongodb.query=1,mike-express-redis|redis.command=1
        - name: DD_APM_ENABLED
          value: "true"
        - name: DD_HOSTNAME
          value: node-web-app
        - name: DD_LOGS_ENABLED
          value: "true"
        - name: DD_LOG_LEVEL
          value: trace
        - name: DD_PROCESS_AGENT_ENABLED
          value: "true"
        - name: MAX_TRACES_PER_SECOND
          value: "1"
        - name: NON_LOCAL_TRAFFIC
          value: "false"
        - name: SD_BACKEND
          value: docker
        image: datadog/agent:latest
        name: agent
        resources: {}
        volumeMounts:
        - mountPath: /var/run/docker.sock
          name: agent-claim0
        - mountPath: /opt/datadog-agent/run
          name: agent-claim1
        - mountPath: /host/proc/mounts
          name: agent-claim2
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          name: agent-claim3
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: agent-claim0
        persistentVolumeClaim:
          claimName: agent-claim0
      - name: agent-claim1
        persistentVolumeClaim:
          claimName: agent-claim1
      - name: agent-claim2
        persistentVolumeClaim:
          claimName: agent-claim2
          readOnly: true
      - name: agent-claim3
        persistentVolumeClaim:
          claimName: agent-claim3
          readOnly: true
status: {}
